} else if(yr<2200)
{
mx_yr = 2200
} else if(yr<2300)
{
mx_yr = 2300
} else
{
mx_yr = 2400
}
if(yr > 2100)
{
y0 = 2075
d = d %>% filter(Year>y0)
}
cols=palette()
n_households = last(d$n_Households)
n_firms = n_households/l_bar
hist(d_prod$Productivity, breaks = 50, xlab="Firm Productivity", main=paste("Year:",yr), col=cols[3])
mx = max(max(d_prod$OptimalEmployment), max(d_prod$Employment))
plot(d_prod$OptimalEmployment, d_prod$Employment, xlab="Optimal employment", ylab="Employment",
log = "xy", col=cols[3], xlim=c(1,1.1*mx), ylim=c(1,1.1*mx))
abline(a=0,b=1, lty=2)
mx = max(max(d_prod$OptimalProduction), max(d_prod$Sales))
plot(d_prod$OptimalProduction, d_prod$Sales, xlab="Optimal production", ylab="Sales",
log = "xy", col=cols[3], xlim=c(0.001,1.1*mx), ylim=c(0.001,1.1*mx))
abline(a=0,b=1, lty=2)
mx = max(d$nUnemployed/d$LaborSupply)
if(last(d$nUnemployed/d$LaborSupply) < 0.2)
{
mx = 0.2
}
plot(d$Year, d$nUnemployed/d$LaborSupply, main="Unemployment rate", xlab = "year", ylab="",
type="l", xlim=c(y0,mx_yr), ylim=c(0,mx), cex.main=0.8)
abline(h=0)
abline(v=burnIn, lty=2)
mx = max(d$nOptimalEmplotment)
plot(d$Year, d$nOptimalEmplotment, main="Total Optimal Employment", xlab = "year", ylab="Optimal Employment",
type="l", xlim=c(y0,mx_yr), ylim=c(0,1.1*mx), cex.main=0.8)
abline(h=n_households, lty=2)
abline(v=burnIn, lty=2)
z=d_prod$Profit<500
z=d_prod$Profit[z]>-100
hist(d_prod$Profit[z], breaks = 50, xlab="Profit", main="", col=cols[3])
mx = max(d$nVacancies/d$LaborSupply)
if(last(d$nVacancies/d$LaborSupply) < 0.2)
{
mx = 0.2
}
plot(d$Year, d$nVacancies/d$LaborSupply, main="Vacancies rate", xlab = "year", ylab="",
type="l", xlim=c(y0,mx_yr), ylim=c(0,mx), cex.main=0.8)
abline(h=0)
abline(v=burnIn, lty=2)
mx = max(d$Wage / d$Price)
plot(d$Year, d$Wage / d$Price, main="", xlab = "year", ylab="Wage / Price",
type="l", xlim=c(y0,mx_yr), ylim=c(0,1.1*mx))
abline(h=0)
abline(v=burnIn, lty=2)
mx = max(d$Sales)
plot(d$Year, d$Sales, main="Sales", xlab = "year", ylab="sales",
type="l", xlim=c(y0,mx_yr), ylim=c(0,1.1*mx), cex.main=0.8)
abline(h=0)
abline(v=burnIn, lty=2)
#-------
# Page 2
#-------
mx = max(d$Wage)
plot(d$Year, d$Wage, xlab = "year", ylab="Wage", ylim=c(0,1.05*mx),
type="l", xlim=c(y0,mx_yr), main=paste("Year:",yr))
abline(h=0)
abline(v=burnIn, lty=2)
mx = max(d$Price)
plot(d$Year, d$Price, main="", xlab = "year", ylab="Price",
type="l", xlim=c(y0,mx_yr), ylim=c(0,1.05*mx))
abline(h=0)
abline(v=burnIn, lty=2)
mx = max(d$n_Households)
plot(d$Year, d$n_Households, main="", xlab = "year", ylab="#Households",
type="l", xlim=c(y0,mx_yr), ylim=c(0,1.05*mx))
abline(h=0)
lines(d$Year, d$LaborSupply, lty=2)
hist(d_house$Age/12, breaks = 100, xlab="Houshold age", main="", xlim=c(18,100), col=cols[3])
#plot(d$Year, d$ProfitPerHousehold/d$Price, main="", xlab = "year", ylab="ProfitHoush / Price",
#     type="l", xlim=c(y0,mx_yr))
#abline(h=0)
#abline(v=burnIn, lty=2)
#plot(d$Year, d$MeanValue, main="", type="l", xlim=c(y0,mx_yr), ylim=c(0, 1.1*max(d$MeanValue)),
#     ylab="MeanValue/Price", xlab="year")
#abline(h=0)
#abline(h=40, lty=2)
#abline(v=burnIn, lty=2)
plot(d$Year, d$MeanAge / 12, main="", type="l", xlim=c(y0,mx_yr), ylim=c(0, 1.1*max(d$MeanAge/12)), ylab="Mean firm age", xlab="year")
abline(h=0)
abline(v=burnIn, lty=2)
if(yr>burnIn)
{
dd = d %>% filter(Year>burnIn)
x_mx = max(dd$nUnemployed/dd$n_Households)
y_mx = max(dd$nVacancies/dd$n_Households)
plot(dd$nUnemployed/dd$n_Households, dd$nVacancies/dd$n_Households, main="Beveridge Curve",
xlab="U-rate", ylab="V-rate", type="p", xlim=c(0,1.1*x_mx), ylim=c(0,1.1*y_mx), pch=19, cex=0.3)
abline(h=0,v=0)
}else
{
plot(0)
}
if(yr>burnIn)
{
dd = d %>% filter(Year>burnIn)
x_mx = max(dd$nUnemployed/dd$n_Households)
y_mx = max(d$Wage/lag(d$Wage)-1, na.rm = T)
y_mn = min(d$Wage/lag(d$Wage)-1, na.rm = T)
plot(dd$nUnemployed/dd$n_Households, dd$Wage/lag(dd$Wage)-1, main="Philips Curve",
xlab="U-rate", ylab="W-growth", type="p", xlim=c(0,1.1*x_mx), ylim=c(1.1*y_mn,1.1*y_mx), pch=19, cex=0.3)
abline(h=0,v=0)
}else
{
plot(0)
}
z = d$Sales / d$nEmployment
plot(d$Year, z, main="", type="l", xlim=c(y0,mx_yr), ylim=c(0, 1.1*max(z)), ylab="Productivity", xlab="year")
abline(h=0)
abline(v=burnIn, lty=2)
z = d_house$Productivity
z = z[z>0]
hist(z, breaks = 100, xlab="Household productivity", main="", xlim=c(0,3), col=cols[3])
abline(v=0, h=0)
#plot(d$Year, d$ProfitPerFirm, main="", xlab = "year", ylab="ProfitFirm",
#     type="l", xlim=c(y0,mx_yr))
#abline(h=0)
#abline(v=burnIn, lty=2)
#plot(d$Year, d$ProfitPerFirm/d$Price, main="", xlab = "year", ylab="ProfitFirm / Price",
#     type="l", xlim=c(y0,mx_yr))
#abline(h=0)
#abline(v=burnIn, lty=2)
#-------
# Page 3a
#-------
par(mfrow=c(3,1))
plot(d$Year, d$nFirms, main="", type="l", xlim=c(y0,mx_yr), ylim=c(0, 1.1*max(d$nFirms)), ylab="Stock of firms", xlab="year")
abline(h=0)
abline(v=burnIn, lty=2)
abline(h=n_firms, lty=2)
z = d$nFirmCloseNegativeProfit + d$nFirmCloseNatural + d$nFirmCloseTooBig
mx = max(max(z), max(d$nFirmNew))
plot(d$Year, z, xlab = "year", ylab="Flow of firms", ylim=c(0, 1.1*mx),
type="l", xlim=c(y0,mx_yr), main="", cex.main=0.7)
lines(d$Year, d$nFirmCloseNatural, col=cols[2], type="l")
lines(d$Year, d$nFirmCloseTooBig, col=cols[3], type="s")
abline(h=120, lty=2)
lines(d$Year, d$nFirmNew, col=cols[4], type="l")
abline(h=0)
abline(v=burnIn, lty=2)
abline(v=2050, lty=2)
ContourFunctions::multicolor.title(c("Closed:Total  ","Closed:Natural  ", "Closed:TooBig  ", "New"), 1:4, cex.main = 0.7)
plot(d$Year, d$SharpeRatio, main="", xlab = "year", ylab="SharpeRatio",
type="l", xlim=c(y0,mx_yr), col=cols[3])
lines(d$Year, d$ExpSharpRatio, col=cols[4])
abline(h=0)
abline(v=burnIn, lty=2)
ContourFunctions::multicolor.title(c("SharpeRatio  ","Expected SharpeRatio"), 3:4, cex.main = 0.7)
#plot(d$Year, d$DiscountedProfits / d$nFirms, main="", xlab = "year", ylab="Discounted Profits per firm",
#     type="l", xlim=c(y0,mx_yr))
#lines(d$Year, d$ExpDiscountedProfits / d$nFirms, lty=2)
#abline(h=0)
#abline(v=burnIn, lty=2)
#-------
# Page 4
#-------
par(mfrow=c(3,3))
hist(d_prod$Age / 12, breaks = 50, xlab="Firm Age (years)", main=paste("Year:",yr))
plot(d_prod$Productivity, d_prod$Profit, xlab="Productivity",ylab="Profit", pch=19, cex=0.3)
abline(h=0)
barplot(log(table(d_house$UnemplDuration)), xlab="UnemplDuration (months)", ylab="log(Antal)")
plot(d_prod$Productivity, d_prod$Age/12, xlab="Productivity",ylab="Age (year)",
pch=19, cex=0.2, xlim=c(0,5))
abline(h=0)
abline(v=0.5, lty=2)
plot(d_prod$Age/12, d_prod$Profit, xlab="Age (year)",ylab="Profit",
pch=19, cex=0.2, xlim=c(0,50))
abline(h=0)
plot(d_prod$Age/12, d_prod$DiscountedProfits, xlab="Age (year)",ylab="Discounted Profit",
pch=19, cex=0.2, xlim=c(0,50))
abline(h=0)
abline(h=mean(d_prod$DiscountedProfits), lty=2, col="red")
abline(h=median(d_prod$DiscountedProfits), lty=2, col="blue")
plot(d_prod$Age/12, d_prod$DiscountedProfits, xlab="Age (year)",ylab="Discounted Profit",
pch=19, cex=0.2, xlim=c(0,5))
abline(h=0)
abline(h=mean(d_prod$DiscountedProfits), lty=2, col="red")
abline(h=median(d_prod$DiscountedProfits), lty=2, col="blue")
hist(d_prod$DiscountedProfits, breaks = 50, xlab="Discounted profits", main="")
dd = d_house[sample(1:nrow(d_house),1000), ]
plot(dd$Age/12, dd$Productivity,pch=19, cex=0.1, xlab="Age (years)", ylab="Productivity", ylim=c(0,5))
#par(mfrow=c(1,1))
#-----------------------------------------------
par(mfrow=c(2,2))
#z = (d$nFirmCloseNegativeProfit + d$nFirmCloseNatural + d$nFirmCloseTooBig) / (12*d$nFirms)
#mx = max(max(z), max(d$nFirmNew / (12*d$nFirms)))
#plot(d$Year, z, xlab = "year", ylab="Flow of firms", ylim=c(0, 1.1*mx),
#     type="l", xlim=c(y0,mx_yr), main="", cex.main=0.7)
#lines(d$Year, d$nFirmCloseNatural / (12*d$nFirms), col=cols[2], type="l")
#lines(d$Year, d$nFirmCloseTooBig / (12*d$nFirms), col=cols[3], type="s")
#abline(h=120, lty=2)
#lines(d$Year, d$nFirmNew / (12*d$nFirms), col=cols[4], type="l")
#abline(h=0)
#abline(v=burnIn, lty=2)
#abline(v=2050, lty=2)
#ContourFunctions::multicolor.title(c("Closed:Total  ","Closed:Natural  ", "Closed:TooBig  ", "New"), 1:4, cex.main = 0.7)
if(d$Year[1]>2050 & length(d$Year)>50)
{
z = (length(d$Year)-50):length(d$Year)
fit = as.character(auto.arima(d$YearConsumption))
hp = hpfilter(d$YearConsumption)
plot(d$Year[z], d$YearConsumption[z], type="b", ylab="Consumption per year", xlab="Year", main=fit, cex=0.5, pch=20)
lines(d$Year[z], hp[z], lty=2)
fit = as.character(auto.arima(d$YearConsumption[z]/hp[z]))
plot(d$Year[z], d$YearConsumption[z]/hp[z], type="b", ylab="Consumption per year", xlab="Year", main=fit, cex=0.5, pch=20)
abline(h=1, lty=2)
fit = as.character(auto.arima(d$YearEmployment))
hp = hpfilter(d$YearEmployment)
plot(d$Year[z], d$YearEmployment[z], type="b", ylab="Employment per year", xlab="Year", main=fit, cex=0.5, pch=20)
lines(d$Year[z], hp[z], lty=2)
fit = as.character(auto.arima(d$YearEmployment[z]/hp[z]))
plot(d$Year[z], d$YearEmployment[z]/hp[z], type="b", ylab="Employment per year", xlab="Year", main=fit, cex=0.5, pch=20)
abline(h=1, lty=2)
}else
{
plot(d$Year, d$YearConsumption, type="b", ylab="Consumption per year", xlab="Year", cex=0.5, pch=20)
plot(d$Year, d$YearEmployment, type="b", ylab="Employment per year", xlab="Year", cex=0.5, pch=20)
}
#plot(d_house$Good, d_house$ShopGood, col=rgb(0,0,0,0.1))
d_house$diff1 = abs(d_house$Good-d_house$ShopGood)
d_house$diff2 = abs(d_house$Good-d_house$ShopGood)
d_house$diff = ifelse(d_house$diff1<d_house$diff2, d_house$diff1, d_house$diff2)
hist(d_house$diff, breaks = 20)
dev.off()
#-----------------------------------------------
plot(d_house$Good, d_house$ShopGood, col=rgb(0,0,0,0.1))
d_house$diff1 = abs(d_house$Good-d_house$ShopGood)
d_house$diff2 = abs(1-d_house$Good-d_house$ShopGood)
d_house$diff = ifelse(d_house$diff1<d_house$diff2, d_house$diff1, d_house$diff2)
hist(d_house$diff, breaks = 20)
rm(list=ls())
library(dplyr)
#library(forecast)
if(Sys.info()['nodename'] == "C1709161")    # PSP's machine
{
o_dir = "C:/test/Dream.AgentBased.MacroModel"
}
if(Sys.info()['nodename'] == "VDI00316")    # Fjernskrivebord
{
o_dir = "C:/Users/B007566/Documents/Output"
}
if(Sys.info()['nodename'] == "VDI00382")    # Fjernskrivebord for agentbased projekt
{
o_dir = "C:/Users/B007566/Documents/Output"
}
files = list.files(paste0(o_dir, "\\Scenarios"), full.names = T)
d = read.delim(files[1])
for(i in 2:length(files))
{
d = rbind(d, read.delim(files[i]))
}
yr0 = 12*(2100-2014)-1
d = d %>% filter(Time>yr0)
d$Time = d$Time - yr0
d = d %>% arrange(Scenario)
ids=unique(d$Scenario)
n = length(ids)
ss=unique(d$Run)
n_ss = length(ss)
hpfilter      = function(x, mu = 100) {
y = x
n <- length(y)          # number of observations
I <- diag(n)            # creates an identity matrix
D <- diff(I,lag=1,d=2)  # second order differences
d <- solve(I + mu * crossprod(D) , y) # solves focs
d
}
#-------------------------
dd = d[is.na(d$marketWage),]
b_ids=unique(dd$Scenario)
d = d %>% filter(!(Scenario %in% b_ids))
d$Employment = as.numeric(d$Employment)
#-------------------------
# SPECIELT!!!!!!!!!!!!!!!!!!!!!!!!!!!
#-----------------------------------
#d$Employment = as.numeric(d$Employment)
#d = d[!is.na(d$Employment),]
#d = d %>% filter(Scenario!=101)
#-----------------------------------
db = d %>% filter(Run=="Base")
#----------------------------------------------------
#bcol = rgb(0.5,0.8,0.5)
bcol = rgb(0.9,0.9,0.9)
lcol = rgb(0.3,0.5,0.99)
lwd = 2.0
lo = function(x)
{
z = sort(x)
mean(z[1:5],na.rm=TRUE)
}
up = function(x)
{
z = sort(x, decreasing = T)
mean(z[1:5],na.rm=TRUE)
}
pplot = function(zz, sMain, ylab="Relative change", s_ylim=c(1,1), abs_ylim=c(0,0))
{
col = rgb(0.5,0.7,0.7)
mx=max(zz$up)
mn=min(zz$lo)
if(abs_ylim==c(0,0))
{
ylim=c(s_ylim[1]*mn,s_ylim[2]*mx)
}else
{
ylim=abs_ylim
}
plot(zz$Time/12, (zz$up), type="l", col=bcol, ylim=ylim, xlab="Year", cex.axis=0.8,
ylab=ylab, main=paste(sMain," - ",ss[shk], "shock"), cex.main=0.8)
box(col=col)
axis(1, col=col, col.ticks=col, cex.axis=0.8)
axis(2, col=col, col.ticks=col, cex.axis=0.8)
lines(zz$Time/12, zz$lo, col=bcol)
polygon(c(zz$Time/12, rev(zz$Time/12)), c(zz$lo, rev(zz$up)), col=bcol, lty=0)
abline(h=0, col=col, lty=2)
lines(zz$Time/12, zz$mean, lwd=lwd, col=lcol)
}
vert_lin = function(t)
{
for(v in seq(from=0, to=max(t), by=10))
abline(v=v, col="gray")
}
pplot2 = function(t,x, main="", s_miny=0, s_maxy=1.2)
{
plot(t, x, type="l", main=main, ylim=max(x)*c(s_miny,s_maxy), ylab="", xlab="Year")
abline(h=0)
vert_lin(t)
lines(t, x)
}
#----------------------------------------------------
pdf(paste0(o_dir, "/base.pdf"))
shk = 1
#r_col = rgb(1,0.3,0.3)
r_col = rgb(0.9,0.9,0.2)
#------------------------
d4 = db %>% filter(Scenario==ids[1])
plot(d4$Time/12, d4$expSharpeRatio, type="l", main="Sharpe Ratio", xlab="Year", ylab="", ylim=c(-0.1, 0.1))
abline(h=0)
vert_lin(d4$Time/12)
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(expSharpeRatio), up=up(expSharpeRatio), lo=lo(expSharpeRatio))
pplot(zz, "Sharpe Ratio", ylab = "", abs_ylim = c(-0.1, 0.1))
lines(d4$Time/12, d4$expSharpeRatio)
#lines(dd2$Time/12, dd2$expSharpeRatio, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$expSharpeRatio, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
pplot2(d4$Time/12, d4$nFirms, main="Number of firms")
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(nFirms), up=up(nFirms), lo=lo(nFirms))
pplot(zz, "Number of firms", ylab = "", s_ylim = c(0.9, 1.1))
#lines(dd2$Time/12, dd2$nFirms, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$nFirms, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(Sales), up=up(Sales), lo=lo(Sales))
pplot(zz, "Sales", ylab = "", s_ylim = c(0.9, 1.1))
#lines(dd2$Time/12, dd2$Sales, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$Sales, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(Employment), up=up(Employment), lo=lo(Employment))
pplot(zz, "Employment", ylab = "", s_ylim = c(0.95, 1.05))
#lines(dd2$Time/12, dd2$Employment, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$Employment, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(marketWage/marketPrice), up=up(marketWage/marketPrice), lo=lo(marketWage/marketPrice))
pplot(zz, "Real wage", ylab = "", s_ylim = c(0.9, 1.1))
#lines(dd2$Time/12, dd2$marketWage / dd2$marketPrice, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$marketWage / dd2$marketPrice, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(marketPrice), up=up(marketPrice), lo=lo(marketPrice))
pplot(zz, "Price", ylab = "", s_ylim = c(0.9, 1.1))
#lines(dd2$Time/12, dd2$marketPrice, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$marketPrice, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(marketWage), up=up(marketWage), lo=lo(marketWage))
pplot(zz, "Wage", ylab = "", s_ylim = c(0.9, 1.1))
#lines(dd2$Time/12, dd2$marketWage, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$marketWage, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
dev.off()
#----------------------------------------------------
pdf(paste0(o_dir, "/base_rel.pdf"))
shk = 1
#r_col = rgb(1,0.3,0.3)
r_col = rgb(0.9,0.9,0.2)
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(expSharpeRatio), up=up(expSharpeRatio)-mean, lo=lo(expSharpeRatio)-mean, mean=0)
pplot(zz, "Sharpe Ratio", ylab = "", s_ylim = c(1.6, 1.6))
#lines(dd2$Time/12, dd2$expSharpeRatio, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$expSharpeRatio, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(nFirms), up=up(nFirms)/mean, lo=lo(nFirms)/mean, mean=1)
pplot(zz, "Number of firms", ylab = "", s_ylim = c(0.9, 1.1))
#lines(dd2$Time/12, dd2$nFirms, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$nFirms, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(Sales), up=up(Sales)/mean, lo=lo(Sales)/mean, mean=1)
pplot(zz, "Sales", ylab = "", s_ylim = c(0.9, 1.1))
#lines(dd2$Time/12, dd2$Sales, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$Sales, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(Employment), up=up(Employment)/mean, lo=lo(Employment)/mean, mean=1)
pplot(zz, "Employment", ylab = "", s_ylim = c(0.95, 1.05))
#lines(dd2$Time/12, dd2$Employment, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$Employment, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(marketWage/marketPrice), up=up(marketWage/marketPrice)/mean, lo=lo(marketWage/marketPrice)/mean, mean=1)
pplot(zz, "Real wage", ylab = "", s_ylim = c(0.9, 1.1))
#lines(dd2$Time/12, dd2$marketWage / dd2$marketPrice, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$marketWage / dd2$marketPrice, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(marketPrice), up=up(marketPrice)/mean, lo=lo(marketPrice)/mean, mean=1)
pplot(zz, "Price", ylab = "", s_ylim = c(0.9, 1.1))
#lines(dd2$Time/12, dd2$marketPrice, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$marketPrice, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
zz = db %>% group_by(Time) %>%
dplyr::summarize(mean=mean(marketWage), up=up(marketWage)/mean, lo=lo(marketWage)/mean, mean=1)
pplot(zz, "Wage", ylab = "", s_ylim = c(0.9, 1.1))
#lines(dd2$Time/12, dd2$marketWage, lwd=2, col=r_col)
#lines(dd2$Time/12, dd2$marketWage, lwd=0.5, col=rgb(0.7,0.7,0.7))
#------------------------
dev.off()
#----------------------------------------------------
pdf(paste0(o_dir, "/shocks.pdf"))
par(mfrow=c(2,2))
for(shk in 2:n_ss)
{
#shk=3
dc = d %>% filter(Run==ss[shk])
dd = merge(dc, db, by=c("Scenario", "Time"))
dd$dnFirms = dd$nFirms.x / dd$nFirms.y - 1
dd$dSales = dd$Sales.x  / dd$Sales.y - 1
dd$dEmployment = as.numeric(dd$Employment.x)  / as.numeric(dd$Employment.y) - 1
dd$dRealWage = (dd$marketWage.x  / dd$marketPrice.x ) / (dd$marketWage.y / dd$marketPrice.y) - 1
dd = dd[dd$dnFirms!=0,] # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
if(F)
{
zids=unique(dd$Scenario)
zn = length(ids)
d2 = dd %>% filter(Scenario==zids[1]) %>% arrange(Time)
plot(d2$Time/12, d2$dnFirms, type="l")
for(i in 2:zn)
{
d2 = dd %>% filter(Scenario==zids[i]) %>% arrange(Time)
lines(d2$Time/12, d2$dnFirms)
}
}
#-----------------
zz = dd %>% group_by(Time) %>%
dplyr::summarize(mean=mean(dnFirms), up=up(dnFirms), lo=lo(dnFirms))
pplot(zz, "Number of firms")
#-----------------
zz = dd %>% group_by(Time) %>%
dplyr::summarize(mean=mean(dSales, na.rm = T), up=up(dSales), lo=lo(dSales))
pplot(zz, "Sales")
#-----------------
zz = dd %>% group_by(Time) %>%
dplyr::summarize(mean=mean(dEmployment, na.rm = T), up=up(dEmployment), lo=lo(dEmployment))
pplot(zz, "Employment")
#-----------------
zz = dd %>% group_by(Time) %>%
dplyr::summarize(mean=mean(dRealWage, na.rm = T), up=up(dRealWage), lo=lo(dRealWage))
pplot(zz, "Real wage")
#-----------------
}
dev.off()
rm(list=ls())
library(dplyr)
#library(forecast)
if(Sys.info()['nodename'] == "C1709161")    # PSP's machine
{
o_dir = "C:/test/Dream.AgentBased.MacroModel"
}
if(Sys.info()['nodename'] == "VDI00316")    # Fjernskrivebord
{
o_dir = "C:/Users/B007566/Documents/Output"
}
if(Sys.info()['nodename'] == "VDI00382")    # Fjernskrivebord for agentbased projekt
{
o_dir = "C:/Users/B007566/Documents/Output"
}
files = list.files(paste0(o_dir, "\\Scenarios"), full.names = T)
d = read.delim(files[1])
for(i in 2:length(files))
{
d = rbind(d, read.delim(files[i]))
}
View(d)
