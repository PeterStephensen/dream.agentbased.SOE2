
R version 4.1.3 (2022-03-10) -- "One Push-Up"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Tidligere gemt arbejdsrum gendannet]

> rm(list=ls())
> #install.packages("forecast")
> library(dplyr)

Vedhæfter pakke: 'dplyr'

De følgende objekter er maskerede fra 'package:stats':

    filter, lag

De følgende objekter er maskerede fra 'package:base':

    intersect, setdiff, setequal, union

> library(forecast)
Registered S3 method overwritten by 'quantmod':
  method            from
  as.zoo.data.frame zoo 
> 
> if(Sys.info()['nodename'] == "C1709161")    # PSP's machine
+ {
+   o_dir = "C:/test/Dream.AgentBased.MacroModel"  
+ }
> if(Sys.info()['nodename'] == "VDI00316")    # Fjernskrivebord
+ {
+   o_dir = "C:/Users/B007566/Documents/Output"  
+ }
> if(Sys.info()['nodename'] == "VDI00382")    # Fjernskrivebord
+ {
+   o_dir = "C:/Users/B007566/Documents/Output"  
+ }
> if(Sys.info()['nodename'] == "C2210098")     # Peters nye maskine
+ {
+   o_dir = "C:/Users/B007566/Documents/Output"  
+ }
> 
> 
> hpfilter      = function(x, mu = 100) {
+   y = x
+   n <- length(y)          # number of observations
+   I <- diag(n)            # creates an identity matrix
+   D <- diff(I,lag=1,d=2)  # second order differences
+   d <- solve(I + mu * crossprod(D) , y) # solves focs
+   d
+ }
> 
> d = read.delim(paste0(o_dir,"/data_year.txt"))
> d_house = read.delim(paste0(o_dir,"/data_households.txt"))
> d_prod = read.delim(paste0(o_dir,"/data_firms.txt"))
> d_sector = read.delim(paste0(o_dir,"/sector_year.txt"))
> 
> 
> y0 = 2014
> burnIn = 2035
> 
> alpha = 0.5
> fi = 2
> k = 2.5
> 
> g = (1 + 0.02)^(1/12) - 1
> 
> l_bar = k * (fi/(1-alpha))^(1/alpha) /(k - (1/(1-alpha)))
> 
> pdf(paste0(o_dir,"/graph1.pdf"))
> par(mfrow=c(3,3))
> 
> yr = last(d$Year)
> if(yr < 2020)
+ {
+   mx_yr = 2020
+ } else if(yr<2025)
+ {
+   mx_yr = 2025
+ } else if(yr<2050)
+ {
+   mx_yr = 2050
+ } else if(yr<2100)
+ {
+   mx_yr = 2100
+ } else if(yr<2200)
+ {
+   mx_yr = 2200
+ } else if(yr<2300)
+ {
+   mx_yr = 2300
+ } else
+ {
+   mx_yr = 2400
+ }
> 
> 
> if(yr > 2100)
+ {
+   y0 = 2075
+   d = d %>% filter(Year>y0)
+ }  
> 
> corr = (1 + 0.02)^(d$Year - y0)
> 
> cols=palette()
> 
> n_households = last(d$n_Households)
> n_firms = n_households/l_bar
> 
> hist(d_prod$Productivity, breaks = 50, xlab="Firm Productivity", main=paste("Year:",yr), col=cols[3])
> 
> mx = max(max(d_prod$OptimalEmployment), max(d_prod$Employment))
> plot(d_prod$OptimalEmployment, d_prod$Employment, xlab="Optimal employment", ylab="Employment", 
+      log = "xy", col=cols[3], xlim=c(1,1.1*mx), ylim=c(1,1.1*mx), cex=0.5)
Advarselsbeskeder:
1: I xy.coords(x, y, xlabel, ylabel, log) :
  29 x værdier <= 0 udeladt fra logaritmisk plot
2: I xy.coords(x, y, xlabel, ylabel, log) :
  66 y værdier <= 0 udeladt fra logaritmisk plot
> abline(a=0,b=1, lty=2)
> 
> mx = max(max(d_prod$OptimalProduction), max(d_prod$Sales))
> mn = min(min(d_prod$OptimalProduction), min(d_prod$Sales))
> plot(d_prod$OptimalProduction, d_prod$Sales, xlab="Optimal production", ylab="Sales", 
+      log = "xy", col=cols[3], xlim=c(1,1.1*mx), ylim=c(1,1.1*mx), cex=0.5)
Advarselsbeskeder:
1: I xy.coords(x, y, xlabel, ylabel, log) :
  202 x værdier <= 0 udeladt fra logaritmisk plot
2: I xy.coords(x, y, xlabel, ylabel, log) :
  296 y værdier <= 0 udeladt fra logaritmisk plot
> abline(a=0,b=1, lty=2)
> 
> mx = max(d$nUnemployed/d$LaborSupply)
> if(last(d$nUnemployed/d$LaborSupply) < 0.2)
+ {
+   mx = 0.2
+ }
> 
> plot(d$Year, d$nUnemployed/d$LaborSupply, main="Unemployment rate", xlab = "year", ylab="", 
+      type="l", xlim=c(y0,mx_yr), ylim=c(0,mx), cex.main=0.8)
> abline(h=0)
> abline(v=burnIn, lty=2)
> 
> 
> 
> mx = max(d$nOptimalEmplotment)
> plot(d$Year, d$nOptimalEmplotment, main="Total Optimal Employment (Red: Actual empl.)", xlab = "year", ylab="Optimal Employment", 
+      type="l", xlim=c(y0,mx_yr), ylim=c(0,1.1*mx), cex.main=0.8)
> lines(d$Year, d$nEmployment, col="red")
> abline(h=n_households, lty=2)
> abline(v=burnIn, lty=2)
> abline(h=0)
> 
> z=d_prod$Profit<500
> z=d_prod$Profit[z]>-100
> hist(d_prod$Profit[z], breaks = 50, xlab="Profit", main="", col=cols[3])
> 
> mx = max(d$nVacancies/d$nEmployment)
> if(last(d$nVacancies/d$nEmployment) < 0.2)
+ {
+   mx = 0.2
+ 